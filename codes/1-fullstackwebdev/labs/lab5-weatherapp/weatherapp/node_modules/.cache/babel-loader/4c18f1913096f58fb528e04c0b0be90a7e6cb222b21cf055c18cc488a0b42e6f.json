{"ast":null,"code":"var _jsxFileName = \"/Users/chrisdavis/Desktop/coding/web-learning/codes/1-fullstackwebdev/weatherapp/weatherapp/src/pages/components/TodayWeatherCard/TodayWeatherCard.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./TodayWeatherCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodayWeatherCard(props) {\n  _s();\n  const [dateNow, setDateNow] = useState(new Date());\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setDateNow(new Date());\n    }, 60000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const renderDate = date => {\n    const options = {\n      day: '2-digit',\n      year: 'numeric',\n      month: 'short',\n      weekday: 'long',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    const formattedDate = new Intl.DateTimeFormat('en-US', options).format(new Date(date));\n    return formattedDate;\n  };\n  const renderDetails = (icon, details) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-centern w-[30px] h-[30px]\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/assets/meta_icon/${icon}`,\n        alt: details\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: details\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  };\n  const weathersMap = weather => {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: weatherIconLg,\n      alt: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  };\n  const {\n    city,\n    weather,\n    water,\n    wind,\n    sun,\n    temp,\n    minTemp,\n    maxTemp,\n    temp_feels_like,\n    weatherIconLg,\n    sun_set,\n    sun_rise\n  } = props.data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"today-weather-card\",\n    style: {\n      backgroundImage: `url('/assets/background/${weather}_background.png')`,\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      backgroundColor: 'rgba(21, 0, 255, 0.8)',\n      backgroundBlendMode: 'overlay'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm mt-3\",\n      children: renderDate(dateNow)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-5 mb-5 text-2xl text-bold\",\n      children: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-bold text-6xl mt-3\",\n      children: `${temp.toFixed(1)}째C`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm\",\n      children: `${minTemp.toFixed(1)}~${maxTemp.toFixed(1)}째`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-20 mb-8\",\n      children: weathersMap(weather)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderDetails('sunrise.svg', sun_rise)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderDetails('sunset.svg', sun_set)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderDetails('humidity.svg', water)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderDetails('wind_speed.svg', wind)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(TodayWeatherCard, \"7xWl+LYvgzpOv7DTu4M4fOxjliw=\");\n_c = TodayWeatherCard;\nexport default TodayWeatherCard;\nvar _c;\n$RefreshReg$(_c, \"TodayWeatherCard\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","TodayWeatherCard","props","_s","dateNow","setDateNow","Date","intervalId","setInterval","clearInterval","renderDate","date","options","day","year","month","weekday","hour","minute","formattedDate","Intl","DateTimeFormat","format","renderDetails","icon","details","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","weathersMap","weather","weatherIconLg","city","water","wind","sun","temp","minTemp","maxTemp","temp_feels_like","sun_set","sun_rise","data","style","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundColor","backgroundBlendMode","toFixed","_c","$RefreshReg$"],"sources":["/Users/chrisdavis/Desktop/coding/web-learning/codes/1-fullstackwebdev/weatherapp/weatherapp/src/pages/components/TodayWeatherCard/TodayWeatherCard.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./TodayWeatherCard.css\";\n\n\nfunction TodayWeatherCard(props) {\n    const [dateNow, setDateNow] = useState(new Date());\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            setDateNow(new Date());\n        }, 60000);\n        return () => clearInterval(intervalId);\n    }, []);\n\n    const renderDate = (date) => {\n        const options = { day: '2-digit', year: 'numeric', month: 'short', weekday: 'long', hour: '2-digit', minute: '2-digit' };\n        const formattedDate = new Intl.DateTimeFormat('en-US', options).format(new Date(date));\n        return formattedDate;\n    }\n\n    const renderDetails = (icon, details) => {\n        return (\n            <div className=\"flex flex-col items-center justify-centern w-[30px] h-[30px]\">\n                <img src={`/assets/meta_icon/${icon}`} alt={details} />\n                <p>{details}</p>\n            </div>\n        )\n    }\n\n    const weathersMap = (weather) => {\n        return (\n            <img src={weatherIconLg} alt={weather} />\n        )\n    }\n\n    const {\n        city,\n        weather,\n        water,\n        wind,\n        sun,\n        temp,\n        minTemp,\n        maxTemp,\n        temp_feels_like,\n        weatherIconLg,\n        sun_set,\n        sun_rise\n    } = props.data;\n\n    return (\n        <div\n            className=\"today-weather-card\"\n            style={{\n                backgroundImage: `url('/assets/background/${weather}_background.png')`,\n                backgroundSize: 'cover',\n                backgroundPosition: 'center',\n                backgroundRepeat: 'no-repeat',\n                backgroundColor: 'rgba(21, 0, 255, 0.8)',\n                backgroundBlendMode: 'overlay',\n            }}>\n            <p className=\"text-sm mt-3\">{renderDate(dateNow)}</p>\n\n            <h2 className=\"mt-5 mb-5 text-2xl text-bold\">{city}</h2>\n\n            <h2 className=\"text-bold text-6xl mt-3\">{`${temp.toFixed(1)}째C`}</h2>\n            <p className=\"text-sm\">{`${minTemp.toFixed(1)}~${maxTemp.toFixed(1)}째`}</p>\n\n            <p className=\"mt-20 mb-8\">{weathersMap(weather)}</p>\n\n            <div className=\"details\">\n                <div>{renderDetails('sunrise.svg', sun_rise)}</div>\n                <div>{renderDetails('sunset.svg', sun_set)}</div>\n                <div>{renderDetails('humidity.svg', water)}</div>\n                <div>{renderDetails('wind_speed.svg', wind)}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default TodayWeatherCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}