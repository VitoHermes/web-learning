{"ast":null,"code":"export const formatLocation = city => {\n  // console.log(city);\n  const cityName = city.toLowerCase();\n  const cityLocation = {\n    'melbourne': {\n      latitude: -37.8136,\n      longitude: 144.9631\n    },\n    'sydney': {\n      latitude: -33.8688,\n      longitude: 151.2153\n    },\n    'London': {\n      latitude: 51.5074,\n      longitude: -0.1278\n    },\n    'paris': {\n      latitude: 48.8566,\n      longitude: 2.3522\n    },\n    'new york': {\n      latitude: 40.7128,\n      longitude: -74.0060\n    },\n    'tokyo': {\n      latitude: 35.6828,\n      longitude: 139.6922\n    },\n    'beijing': {\n      latitude: 39.9042,\n      longitude: 116.3975\n    }\n  };\n  // console.log(cityLocation[cityName]);\n  if (!cityLocation[cityName]) {\n    return null;\n  }\n  const location = {\n    latitude: cityLocation[cityName].latitude,\n    longitude: cityLocation[cityName].longitude\n  };\n  return location;\n};","map":{"version":3,"names":["formatLocation","city","cityName","toLowerCase","cityLocation","latitude","longitude","location"],"sources":["/Users/chrisdavis/Desktop/coding/web-learning/codes/1-fullstackwebdev/labs/lab5-weatherapp/weatherapp/src/utils/formatLocation.jsx"],"sourcesContent":["\nexport const formatLocation = (city) => {\n    // console.log(city);\n    const cityName = city.toLowerCase();\n    const cityLocation = {\n        'melbourne': {\n            latitude: -37.8136,\n            longitude: 144.9631\n        },\n        'sydney': {\n            latitude: -33.8688,\n            longitude: 151.2153\n        },\n        'London': {\n            latitude: 51.5074,\n            longitude: -0.1278\n        },\n        'paris': {\n            latitude: 48.8566,\n            longitude: 2.3522\n        },\n        'new york': {\n            latitude: 40.7128,\n            longitude: -74.0060\n        },\n        'tokyo': {\n            latitude: 35.6828,\n            longitude: 139.6922\n        },\n        'beijing': {\n            latitude: 39.9042,\n            longitude: 116.3975\n        }\n    }\n    // console.log(cityLocation[cityName]);\n    if (!cityLocation[cityName]) {\n        return null;\n    }\n    const location = { latitude: cityLocation[cityName].latitude, longitude: cityLocation[cityName].longitude };\n    return location;\n};\n"],"mappings":"AACA,OAAO,MAAMA,cAAc,GAAIC,IAAI,IAAK;EACpC;EACA,MAAMC,QAAQ,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;EACnC,MAAMC,YAAY,GAAG;IACjB,WAAW,EAAE;MACTC,QAAQ,EAAE,CAAC,OAAO;MAClBC,SAAS,EAAE;IACf,CAAC;IACD,QAAQ,EAAE;MACND,QAAQ,EAAE,CAAC,OAAO;MAClBC,SAAS,EAAE;IACf,CAAC;IACD,QAAQ,EAAE;MACND,QAAQ,EAAE,OAAO;MACjBC,SAAS,EAAE,CAAC;IAChB,CAAC;IACD,OAAO,EAAE;MACLD,QAAQ,EAAE,OAAO;MACjBC,SAAS,EAAE;IACf,CAAC;IACD,UAAU,EAAE;MACRD,QAAQ,EAAE,OAAO;MACjBC,SAAS,EAAE,CAAC;IAChB,CAAC;IACD,OAAO,EAAE;MACLD,QAAQ,EAAE,OAAO;MACjBC,SAAS,EAAE;IACf,CAAC;IACD,SAAS,EAAE;MACPD,QAAQ,EAAE,OAAO;MACjBC,SAAS,EAAE;IACf;EACJ,CAAC;EACD;EACA,IAAI,CAACF,YAAY,CAACF,QAAQ,CAAC,EAAE;IACzB,OAAO,IAAI;EACf;EACA,MAAMK,QAAQ,GAAG;IAAEF,QAAQ,EAAED,YAAY,CAACF,QAAQ,CAAC,CAACG,QAAQ;IAAEC,SAAS,EAAEF,YAAY,CAACF,QAAQ,CAAC,CAACI;EAAU,CAAC;EAC3G,OAAOC,QAAQ;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}