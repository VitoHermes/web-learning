{"ast":null,"code":"import axios from'axios';import{getWeatherIconLg}from'./getWeatherIconLg';export const getTempToday=async props=>{const{latitude,longitude}=props;const apiKey='31f0270f73eec09e278e668dbaabb991';const url=\"https://api.openweathermap.org/data/2.5/weather?lat=\".concat(latitude,\"&lon=\").concat(longitude,\"&appid=\").concat(apiKey,\"&lang=zh_cn&units=metric\");const response=await axios.get(url);const data=response.data;const[temp,temp_min,temp_max,humidity,weather,weather_description,weather_icon,wind_speed,temp_feels_like]=[data.main.temp,data.main.temp_min,data.main.temp_max,data.main.humidity,data.weather[0].main,data.weather[0].description,data.weather[0].icon,data.wind.speed,data.main.feels_like];// console.log(temp, temp_min, temp_max, humidity, weather, weather_description, weather_icon, wind_speed, temp_feels_like);\n// console.log(data);\nconst weatherIconLg=getWeatherIconLg(weather);const getDate=timestamp=>{const date=new Date(timestamp*1000);const formattedDate=date.toISOString().split('T')[0];return formattedDate;};return{'date':getDate(data.dt),'city':data.name,'temp':temp,'minTemp':temp_min,'maxTemp':temp_max,'weather':weather,'weather_description':weather_description,'weather_icon':weather_icon,'weatherIconLg':weatherIconLg,'water':humidity,'wind':wind_speed,'sun':temp_feels_like};};// \"today\": {\n//     \"date\": \"2024-03-20\",\n//     \"city\": \"Melbourne\",\n//     \"weather\": \"Cloudy\",\n//     \"water\": 85,\n//     \"wind\": 9,\n//     \"sun\": 75,\n//     \"minTemp\": 10,\n//     \"maxTemp\": 20\n// },","map":{"version":3,"names":["axios","getWeatherIconLg","getTempToday","props","latitude","longitude","apiKey","url","concat","response","get","data","temp","temp_min","temp_max","humidity","weather","weather_description","weather_icon","wind_speed","temp_feels_like","main","description","icon","wind","speed","feels_like","weatherIconLg","getDate","timestamp","date","Date","formattedDate","toISOString","split","dt","name"],"sources":["/Users/chrisdavis/Desktop/coding/web-learning/codes/1-fullstackwebdev/weatherapp/weatherapp/src/utils/getTempToday.jsx"],"sourcesContent":["import axios from 'axios';\nimport { getWeatherIconLg } from './getWeatherIconLg';\n\nexport const getTempToday = async (props) => {\n    const { latitude, longitude } = props;\n    const apiKey = '31f0270f73eec09e278e668dbaabb991';\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apiKey}&lang=zh_cn&units=metric`;\n\n    const response = await axios.get(url);\n    const data = response.data;\n\n    const [\n        temp,\n        temp_min,\n        temp_max,\n        humidity,\n        weather,\n        weather_description,\n        weather_icon,\n        wind_speed,\n        temp_feels_like\n    ] = [\n            data.main.temp,\n            data.main.temp_min,\n            data.main.temp_max,\n            data.main.humidity,\n            data.weather[0].main,\n            data.weather[0].description,\n            data.weather[0].icon,\n            data.wind.speed,\n            data.main.feels_like\n        ];\n    // console.log(temp, temp_min, temp_max, humidity, weather, weather_description, weather_icon, wind_speed, temp_feels_like);\n    // console.log(data);\n    const weatherIconLg = getWeatherIconLg(weather);\n\n    const getDate = (timestamp) => {\n        const date = new Date(timestamp * 1000);\n        const formattedDate = date.toISOString().split('T')[0];\n        return formattedDate;\n    }\n\n    return {\n        'date': getDate(data.dt),\n        'city': data.name,\n        'temp': temp,\n        'minTemp': temp_min,\n        'maxTemp': temp_max,\n        'weather': weather,\n        'weather_description': weather_description,\n        'weather_icon': weather_icon,\n        'weatherIconLg': weatherIconLg,\n        'water': humidity,\n        'wind': wind_speed,\n        'sun': temp_feels_like\n    };\n};\n\n// \"today\": {\n//     \"date\": \"2024-03-20\",\n//     \"city\": \"Melbourne\",\n//     \"weather\": \"Cloudy\",\n//     \"water\": 85,\n//     \"wind\": 9,\n//     \"sun\": 75,\n//     \"minTemp\": 10,\n//     \"maxTemp\": 20\n// },"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,gBAAgB,KAAQ,oBAAoB,CAErD,MAAO,MAAM,CAAAC,YAAY,CAAG,KAAO,CAAAC,KAAK,EAAK,CACzC,KAAM,CAAEC,QAAQ,CAAEC,SAAU,CAAC,CAAGF,KAAK,CACrC,KAAM,CAAAG,MAAM,CAAG,kCAAkC,CACjD,KAAM,CAAAC,GAAG,wDAAAC,MAAA,CAA0DJ,QAAQ,UAAAI,MAAA,CAAQH,SAAS,YAAAG,MAAA,CAAUF,MAAM,4BAA0B,CAEtI,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAT,KAAK,CAACU,GAAG,CAACH,GAAG,CAAC,CACrC,KAAM,CAAAI,IAAI,CAAGF,QAAQ,CAACE,IAAI,CAE1B,KAAM,CACFC,IAAI,CACJC,QAAQ,CACRC,QAAQ,CACRC,QAAQ,CACRC,OAAO,CACPC,mBAAmB,CACnBC,YAAY,CACZC,UAAU,CACVC,eAAe,CAClB,CAAG,CACIT,IAAI,CAACU,IAAI,CAACT,IAAI,CACdD,IAAI,CAACU,IAAI,CAACR,QAAQ,CAClBF,IAAI,CAACU,IAAI,CAACP,QAAQ,CAClBH,IAAI,CAACU,IAAI,CAACN,QAAQ,CAClBJ,IAAI,CAACK,OAAO,CAAC,CAAC,CAAC,CAACK,IAAI,CACpBV,IAAI,CAACK,OAAO,CAAC,CAAC,CAAC,CAACM,WAAW,CAC3BX,IAAI,CAACK,OAAO,CAAC,CAAC,CAAC,CAACO,IAAI,CACpBZ,IAAI,CAACa,IAAI,CAACC,KAAK,CACfd,IAAI,CAACU,IAAI,CAACK,UAAU,CACvB,CACL;AACA;AACA,KAAM,CAAAC,aAAa,CAAG1B,gBAAgB,CAACe,OAAO,CAAC,CAE/C,KAAM,CAAAY,OAAO,CAAIC,SAAS,EAAK,CAC3B,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACF,SAAS,CAAG,IAAI,CAAC,CACvC,KAAM,CAAAG,aAAa,CAAGF,IAAI,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACtD,MAAO,CAAAF,aAAa,CACxB,CAAC,CAED,MAAO,CACH,MAAM,CAAEJ,OAAO,CAACjB,IAAI,CAACwB,EAAE,CAAC,CACxB,MAAM,CAAExB,IAAI,CAACyB,IAAI,CACjB,MAAM,CAAExB,IAAI,CACZ,SAAS,CAAEC,QAAQ,CACnB,SAAS,CAAEC,QAAQ,CACnB,SAAS,CAAEE,OAAO,CAClB,qBAAqB,CAAEC,mBAAmB,CAC1C,cAAc,CAAEC,YAAY,CAC5B,eAAe,CAAES,aAAa,CAC9B,OAAO,CAAEZ,QAAQ,CACjB,MAAM,CAAEI,UAAU,CAClB,KAAK,CAAEC,eACX,CAAC,CACL,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}